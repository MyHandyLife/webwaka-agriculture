[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=backend
    --cov-report=html:tests/coverage/html
    --cov-report=xml:tests/coverage/coverage.xml
    --cov-report=term-missing
    --cov-fail-under=95
    --junitxml=tests/results/junit.xml
    --html=tests/results/report.html
    --self-contained-html

markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end tests for complete workflows
    performance: Performance and load testing
    accessibility: Accessibility compliance testing
    security: Security vulnerability testing
    cultural: African cultural integration testing
    offline: Offline functionality testing
    mobile: Mobile device compatibility testing
    slow: Tests that take longer than 5 seconds
    african_context: Tests specific to African agricultural contexts
    traditional_knowledge: Tests for traditional farming practice integration
    multi_language: Multi-language support testing
    network_simulation: Network condition simulation tests

filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# African-specific test configuration
env =
    TESTING = true
    AFRICAN_CONTEXT = true
    OFFLINE_MODE = true
    MOBILE_FIRST = true
    TRADITIONAL_KNOWLEDGE = true
    MULTI_LANGUAGE = true
    CULTURAL_ADAPTATION = true
    DATA_SOVEREIGNTY = true

